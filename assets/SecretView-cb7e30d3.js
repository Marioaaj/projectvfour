import{u as E,s as c,r as d,o as A,a as p,c as f,b as o,t as T,w as F,v as M,d as C,F as O,e as B}from"./index-731debe5.js";const N="/projectvfour/assets/cam-529a1c66.svg",$="/projectvfour/assets/edit-251e013d.svg",q="/projectvfour/assets/trash-ec75e756.svg";async function z(){const h=E(),{error:r}=await c.auth.signOut();r?console.log(r):(console.log("Sign out success"),h.push("/login"))}let G=(h=21)=>crypto.getRandomValues(new Uint8Array(h)).reduce((r,i)=>(i&=63,i<36?r+=i.toString(36):i<62?r+=(i-26).toString(36).toUpperCase():i>62?r+="-":r+="_",r),"");const W={class:"ok"},H={class:"header"},J=o("h1",null,"📝 Log an Odyssey 📝",-1),K={id:"account"},Q={class:"task-form-container"},X=o("label",{for:"file-input",class:"file-input-label"},[o("img",{src:N,alt:"Choose file"})],-1),Y={key:0,class:"image-preview"},Z=["src"],ee={class:"task-list"},se={key:0,class:"image-container"},oe=["src"],te={class:"text-container"},ae={class:"button-container"},re=["onClick"],le=["onClick"],ie={__name:"SecretView",setup(h){const r="https://oerpddeqepyvfzuecggs.supabase.co/storage/v1/object/public/echoimages/",i=E(),R=e=>{i.push({name:"editTask",params:{taskId:e.id}})},S=async()=>{console.log("Manual data load triggered"),await y()},I=e=>r+e,v=d();d(null),D();async function D(){try{const e=await c.auth.getSession();console.log("Session data retrieved:",e),v.value=e}catch(e){console.error("Error retrieving session:",e)}}const P=async()=>{await z(),i.push("../login")},g=d(""),k=d(null),m=d(null),x=e=>{const s=e.target.files[0];s&&s.size<=9*1024*1024?(m.value=s,k.value=URL.createObjectURL(s)):alert("File is too large. Please select a file smaller than 9MB.")},V=async()=>{var t,u,_,l;if(!g.value){console.log("No task value entered");return}const e=(l=(_=(u=(t=v.value)==null?void 0:t.data)==null?void 0:u.session)==null?void 0:_.user)==null?void 0:l.id;if(!e){console.log("User is not logged in for addTask");return}let s=null;if(m.value){const n=`echoimages/${G()}-${m.value.name}`,{error:a}=await c.storage.from("echoimages").upload(n,m.value);if(a){console.error("Error uploading file:",a);return}s=n}try{const{data:n,error:a}=await c.from("tasks").insert([{name:g.value,user_id:e,image_url:s}]);a?console.error("Error adding task:",a):(console.log("Task added successfully:",n),w.value.push(n[0]),g.value="",m.value=null,k.value=null)}catch(n){console.error("Error during task addition:",n)}await y()},w=d([]),y=async()=>{var s,t,u,_;const e=(_=(u=(t=(s=v.value)==null?void 0:s.data)==null?void 0:t.session)==null?void 0:u.user)==null?void 0:_.id;if(console.log("Loading tasks for user ID:",e),!e){console.log("User is not logged in or userId is not available");return}try{let{data:l,error:n}=await c.from("tasks").select("*").eq("user_id",e);if(n){console.error("Error fetching tasks:",n);return}console.log("Tasks fetched from database:",l),l=await Promise.all(l.map(async a=>{if(a.image_url){const b=a.image_url.split("/").pop();console.log("Generating public URL for image:",b);const{publicURL:U,error:L}=c.storage.from("echoimages").getPublicUrl(b);return L?(console.error("Error getting public URL:",L),a):(console.log("Public URL for image:",U),{...a,publicImageUrl:U})}return a})),console.log("Tasks with public URLs:",l),w.value=l}catch(l){console.error("An error occurred while fetching tasks:",l)}},j=async e=>{try{const{error:s}=await c.from("tasks").delete().match({id:e});s?console.error("Error deleting task:",s):(console.log("Task deleted successfully:",e),await y())}catch(s){console.error("An error occurred while deleting the task:",s)}};return A(async()=>{await y()}),(e,s)=>(p(),f("div",W,[o("div",H,[J,o("p",K,"Account: "+T(v.value.data.session.user.email),1),o("button",{onClick:P},"Sign Out"),o("button",{onClick:S,class:"load-data-button"},"Reveal Memories")]),o("div",Q,[X,o("input",{type:"file",id:"file-input",onChange:x,accept:"image/*",style:{display:"none"}},null,32),F(o("input",{type:"text",placeholder:"Write your Odyssey","onUpdate:modelValue":s[0]||(s[0]=t=>g.value=t),class:"task-input"},null,512),[[M,g.value]]),o("button",{onClick:V,class:"add-button"},"Add")]),k.value?(p(),f("div",Y,[o("img",{src:k.value,alt:"Preview"},null,8,Z)])):C("",!0),o("ul",ee,[(p(!0),f(O,null,B(w.value,t=>(p(),f("li",{key:t.id,class:"task-item"},[t.image_url?(p(),f("div",se,[o("img",{src:I(t.image_url),class:"task-image",alt:"Task Image"},null,8,oe)])):C("",!0),o("div",te,T(t.name),1),o("div",ae,[o("img",{src:$,onClick:()=>R(t),class:"edit-icon",alt:"Edit"},null,8,re),o("img",{src:q,onClick:u=>j(t.id),class:"delete-icon",alt:"Delete"},null,8,le)])]))),128))])]))}};export{ie as default};
