import{r as f,s as d,o as x,a as p,c as h,b as s,t as L,w as C,v as V,d as I,F as A,e as F,f as B}from"./index-e7739bad.js";const D="/projectvfour/assets/cam-529a1c66.svg",j="/projectvfour/assets/icons8-trash-24-c23b678e.svg";let N=(w=21)=>crypto.getRandomValues(new Uint8Array(w)).reduce((c,n)=>(n&=63,n<36?c+=n.toString(36):n<62?c+=(n-26).toString(36).toUpperCase():n>62?c+="-":c+="_",c),"");const O={class:"about"},M={class:"header"},$=s("h1",null,"Odyssey Book",-1),q={id:"account"},z=s("h2",null,"📝 Log an Odyssey 📝",-1),W={class:"task-form-container"},G=s("label",{for:"file-input",class:"file-input-label"},[s("img",{src:D,alt:"Choose file"})],-1),H={key:0,class:"image-preview"},J=["src"],K={class:"task-list"},Q={key:0,class:"image-container"},X=["src"],Y={class:"text-container"},Z=["onClick"],se={__name:"SecretView",setup(w){const c="https://oerpddeqepyvfzuecggs.supabase.co/storage/v1/object/public/echoimages/",n=o=>c+o,i=f();P();async function P(){i.value=await d.auth.getSession(),console.log(i.value),console.log("Account session data:",i.value)}const g=f(""),v=f(null),m=f(null),R=o=>{const e=o.target.files[0];e&&e.size<=9*1024*1024?(m.value=e,v.value=URL.createObjectURL(e)):alert("File is too large. Please select a file smaller than 9MB.")},S=async()=>{var t,u,_,l;if(!g.value){console.log("No task value entered");return}const o=(l=(_=(u=(t=i.value)==null?void 0:t.data)==null?void 0:u.session)==null?void 0:_.user)==null?void 0:l.id;if(!o){console.log("User is not logged in");return}let e=null;if(m.value){const r=`echoimages/${N()}-${m.value.name}`,{error:a}=await d.storage.from("echoimages").upload(r,m.value);if(a){console.error("Error uploading file:",a);return}e=r}try{const{data:r,error:a}=await d.from("tasks").insert([{name:g.value,user_id:o,image_url:e}]);a?console.error("Error adding task:",a):(console.log("Task added successfully:",r),k.value.push(r[0]),g.value="",m.value=null,v.value=null)}catch(r){console.error("Error during task addition:",r)}},k=f([]),U=async()=>{var e,t,u,_;const o=(_=(u=(t=(e=i.value)==null?void 0:e.data)==null?void 0:t.session)==null?void 0:u.user)==null?void 0:_.id;if(console.log("Loading tasks for user ID:",o),o)try{let{data:l,error:r}=await d.from("tasks").select("*").eq("user_id",o);if(r){console.error("Error fetching tasks:",r);return}l=await Promise.all(l.map(async a=>{if(a.image_url){const b=a.image_url.replace("echoimages/","");console.log("Image path for getPublicUrl:",b);const{publicURL:E,error:y}=d.storage.from("echoimages").getPublicUrl(b);return console.log("Public URL:",E,"Error:",y),y?(console.error("Error getting public URL:",y),a):{...a,publicImageUrl:E}}return a})),console.log("Fetched tasks with public URLs:",l),k.value=l}catch(l){console.error("An error occurred while fetching tasks:",l)}else console.log("User is not logged in")},T=async o=>{try{const{error:e}=await d.from("tasks").delete().match({id:o});e?console.error("Error deleting task:",e):await U()}catch(e){console.error("An error occurred while deleting the task:",e)}};return x(async()=>{await U()}),(o,e)=>(p(),h("div",O,[s("div",M,[$,s("p",q,"Account: "+L(i.value.data.session.user.email),1),z]),s("div",W,[G,s("input",{type:"file",id:"file-input",onChange:R,accept:"image/*",style:{display:"none"}},null,32),C(s("input",{type:"text",placeholder:"Write your Odyssey","onUpdate:modelValue":e[0]||(e[0]=t=>g.value=t),class:"task-input"},null,512),[[V,g.value]]),s("button",{onClick:S,class:"add-button"},"Add")]),v.value?(p(),h("div",H,[s("img",{src:v.value,alt:"Preview"},null,8,J)])):I("",!0),s("ul",K,[(p(!0),h(A,null,F(k.value,t=>(p(),h("li",{key:t.id,class:"task-item"},[t.image_url?(p(),h("div",Q,[s("img",{src:n(t.image_url),class:"task-image",alt:"Task Image"},null,8,X)])):I("",!0),s("div",Y,[B(L(t.name)+" ",1),s("img",{src:j,onClick:u=>T(t.id),class:"delete-icon",alt:"Delete"},null,8,Z)])]))),128))])]))}};export{se as default};
